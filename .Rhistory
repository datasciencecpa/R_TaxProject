library("UsingR", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
head(precip)
head(sort(precip, decreasing = TRUE))
current_time <- now()
require(lubridate)
library(UsingR)
require(lubridate)
install.packages("lubridate")
library("lubridate", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
current_time <-now()
current_time
?lubridate
month(current_time, label = TRUE)
?ymd
x <- babies$dwt
x
length(x)
x[x==999] <- NA
range(x, na.rm = TRUE)
age <- kid.weights$age
age
ht <- kid.weights$height
ht[age>=48 & age<=60]
ht
gas <- c(65311 65624 659!8 66219 66499 66821 67145 67447)
gas <- c(65311 65624 65908 66219 66499 66821 67145 67447)
gas <- c(65311, 65624, 65908, 66219, 66499, 66821, 67145, 67447)
diff(gas)
mean(gas)
mean (diff(gas))
x <- c(2,5,4,10,8)
x_square = x*x
x_square
?gsub
first_and_last <- function(name) { name <- gsub(" ", "", name) letters <- strsplit(name, split = "")[[1]] c(first = min(letters), last = max(letters)) }
first_and_last("New York")
first_and_last <- function(name) { name <- gsub(" ", "", name) letters <- strsplit(name, split = "")[[1]] c(first = min(letters), last = max(letters)) }
first_and_last <- function(name) {
name <- gsub(" ", "", name)
letters <- strsplit(name, split = "")[[1]]
c(first = min(letters), last = max(letters))
}
first_and_last("New York")
help(gsub)
gsub(" ","", "New York")
a <- gsub(" ","", "New York")
letters <- strsplit(a, split = "")[[1]]
letters
?cat
cat("The average temperature is", mean(x), "\n")
cat("The average temperature is", mean(c(10,5,20,1)), "\n")
?vapply
?vapply(list, function, FUN.VALUE = type, ...)
rep(seq(8, 2, by = -2), times = 2))
rep(seq(8, 2, by = -2), times = 2)
?strptime
install.packages(c("nycflights13", "gapminder", "Lahman"))
install.packages(c("backports", "BH", "class", "codetools", "htmlTable", "pillar", "rlang", "tibble"))
install.packages("rmarkdown")
install.packages("tinytex")
unlink('Desktop/rmarkdown-book/03-documents_cache', recursive = TRUE)
shiny::runApp('Desktop/R_Shiny/Example_01')
if (interactive()) {
ui <- fluidPage(
uiOutput("moreControls")
)
server <- function(input, output) {
output$moreControls <- renderUI({
tagList(
sliderInput("n", "N", 1, 1000, 500),
textInput("label", "Label")
)
})
}
shinyApp(ui, server)
}
if (interactive()) {
ui <- fluidPage(
uiOutput("moreControls")
)
server <- function(input, output) {
output$moreControls <- renderUI({
tagList(
sliderInput("n", "N", 1, 1000, 500),
textInput("label", "Label")
)
})
}
shinyApp(ui, server)
}
if (interactive()) {
ui <- fluidPage(
uiOutput("moreControls")
)
server <- function(input, output) {
output$moreControls <- renderUI({
tagList(
sliderInput("n", "N", 1, 1000, 500),
textInput("label", "Label")
)
})
}
shinyApp(ui, server)
}
library("shiny", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
if (interactive()) {
ui <- fluidPage(
uiOutput("moreControls")
)
server <- function(input, output) {
output$moreControls <- renderUI({
tagList(
sliderInput("n", "N", 1, 1000, 500),
textInput("label", "Label")
)
})
}
shinyApp(ui, server)
}
if (interactive()) {
ui <- fluidPage(
p("The first radio button group controls the second"),
radioButtons("inRadioButtons", "Input radio buttons",
c("Item A", "Item B", "Item C")),
radioButtons("inRadioButtons2", "Input radio buttons 2",
c("Item A", "Item B", "Item C"))
)
server <- function(input, output, session) {
observe({
x <- input$inRadioButtons
# Can also set the label and select items
updateRadioButtons(session, "inRadioButtons2",
label = paste("radioButtons label", x),
choices = x,
selected = x
)
})
}
shinyApp(ui, server)
}
setwd("~/Desktop/R_TaxProject")
ggplot(data = a) + geom_bar(stat = "identity")
library(ggplot2)
a <- c(long = 100000, ha = 200000)
ggplot(data = a) + geom_bar(stat = "identity")
library(ggplot2)
a <- c(long = 100000, ha = 200000)
a <- data.frame(a)
ggplot(data = a) + geom_bar(stat = "identity")
library(ggplot2)
a <- c("Long", "Ha")
b <- c(200000, 555000)
k <- data.frame(a,b)
ggplot(data = k, aes(x = a, y = b)) + geom_bar(stat = "identity")
library(ggplot2)
a <- c("Long", "Ha")
b <- c(200000, 555000)
k <- data.frame(a,b)
ggplot(data = k, aes(x = a, y = b, fill = a)) + geom_bar(stat = "identity")
tt
tt <- matrix(1:10, nrow = 2)
tt
apply(tt, 1, sum)
apply(tt, 2, sum)
tt1 <- data.frame(tt)
apply(tt1, 1, sum)
tt1
tt1[,X6] <- apply(tt1, 1, sum)
colnames(tt1) <- c("1","2", "3", "4","5")
tt1
tt1$6 <- apply(tt1, 1, sum)
tt1 <- matrix(1:9, nrow = 3)
tt1
tt1 <- data.frame(tt1)
tt1
colnames(tt1) <- c("Income_Type", "2018", "2017")
tt1
tt1$TaxYear <- c("2018")
tt1
tt2 <- tt1[,c("Income_Type", "2017", "TaxYear")]
tt2
tt2$TaxYear <- 2017
tt2
tt3 <- rbind(tt1, tt2)
tt1$2017 <- NULL
tt1
tt1$`2017` <- NULL
tt1
tt2
colnames(tt1)[colnames(tt1) == "2018"] <- "Amount"
tt1
colnames(tt2)[colnames(tt2) == "2017"] <- "Amount"
tt2
tt3 <- rbind(tt1, tt2)
tt3
ggplot(data = tt3, aes (x= TaxYear, y = Amount, fill = Income_Type)) + geom_bar(stat = "identity")
ggplot(data = tt3, aes (x= TaxYear, y = Amount, fill = Income_Type)) + geom_bar(stat = "identity", position = position_dodge())
tt1
tt2
tt3
hk <- tt1[c("Income_Type, "Amount")]
hk <- tt1[c("Income_Type", "Amount")]
hk
class(hk)
shiny::runApp()
