library("UsingR", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
head(precip)
head(sort(precip, decreasing = TRUE))
current_time <- now()
require(lubridate)
library(UsingR)
require(lubridate)
install.packages("lubridate")
library("lubridate", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
current_time <-now()
current_time
?lubridate
month(current_time, label = TRUE)
?ymd
x <- babies$dwt
x
length(x)
x[x==999] <- NA
range(x, na.rm = TRUE)
age <- kid.weights$age
age
ht <- kid.weights$height
ht[age>=48 & age<=60]
ht
gas <- c(65311 65624 659!8 66219 66499 66821 67145 67447)
gas <- c(65311 65624 65908 66219 66499 66821 67145 67447)
gas <- c(65311, 65624, 65908, 66219, 66499, 66821, 67145, 67447)
diff(gas)
mean(gas)
mean (diff(gas))
x <- c(2,5,4,10,8)
x_square = x*x
x_square
?gsub
first_and_last <- function(name) { name <- gsub(" ", "", name) letters <- strsplit(name, split = "")[[1]] c(first = min(letters), last = max(letters)) }
first_and_last("New York")
first_and_last <- function(name) { name <- gsub(" ", "", name) letters <- strsplit(name, split = "")[[1]] c(first = min(letters), last = max(letters)) }
first_and_last <- function(name) {
name <- gsub(" ", "", name)
letters <- strsplit(name, split = "")[[1]]
c(first = min(letters), last = max(letters))
}
first_and_last("New York")
help(gsub)
gsub(" ","", "New York")
a <- gsub(" ","", "New York")
letters <- strsplit(a, split = "")[[1]]
letters
?cat
cat("The average temperature is", mean(x), "\n")
cat("The average temperature is", mean(c(10,5,20,1)), "\n")
?vapply
?vapply(list, function, FUN.VALUE = type, ...)
rep(seq(8, 2, by = -2), times = 2))
rep(seq(8, 2, by = -2), times = 2)
?strptime
install.packages(c("nycflights13", "gapminder", "Lahman"))
install.packages(c("backports", "BH", "class", "codetools", "htmlTable", "pillar", "rlang", "tibble"))
install.packages("rmarkdown")
install.packages("tinytex")
unlink('Desktop/rmarkdown-book/03-documents_cache', recursive = TRUE)
shiny::runApp('Desktop/R_Shiny/Example_01')
setwd("~/Desktop/R_TaxProject")
myFunc <- function (msg){
print(msg)
printfunc <- function () {
print ("Print inside function")
}
}
myFunc("Hello long")
myFunc.printfunc()
myFunc.printfunc
myFunc.printfunc
myFunc.printfunc
myFunc <- function (msg){
print(msg)
printfunc <- function () {
print ("Print inside function")
}
}
myFunc("Hello long")
myFunc.printfunc
myFunc()
myFunc("Hello long").printfunc()
myFunc <- function (){
print("Hello Long")
printfunc <- function () {
print ("Print inside function")
}
}
myFunc().printfunc()
View(myFunc)
View(myFunc)
myFunc <- function (){
print("Hello Long")
a <- function () {
print ("Print inside function")
}
}
myFunc()a()
myFunc <- function (){
print("Hello Long")
a <- function () {
print ("Print inside function")
}
}
myFunc()a()
x <- 10
f1 <- function(x) {
function() {
x + 10
}
}
f1(1)()
x <- 10
f1 <- function(x) {
b <- function() {
x + 10
}
}
f1(1)b()
myFunc <- function (){
print("Hello Long")
function () {
print ("Print inside function")
}
}
myFunc()()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
}
educationalCrd <- function (){
runApp()
runApp()
runApp()
runApp()
# Credit calculation module
# Author: Long Nguyen
# Date Created: 01/26/2019
## This module will use to calcualte credits.
childTaxCrd <- function (AGI, filingStatus, taxYear, numQualifyingChild, creditDF, numQualifyingRelative = 0){
# Link to IRS website, pub 972: https://www.irs.gov/publications/p972
# numQualifyingRelative is a variable that will be used for tax year 2018 and later only.
# tax credit of this is $500 per qualified person, nonrefundable.
print ("function was called")
}
dependentCareCrd <- function (){
}
educationalCrd <- function (){
}
saverCrd <- function(){
}
elderlyDisableCrd <- function (){
# Schedule R Instruction: https://www.irs.gov/pub/irs-pdf/i1040sr.pdf
}
additionalChildTaxCrd <- function (){
# Form 8812
}
runApp()
runApp()
fdsfsfs
fsdfssf)
runApp()
x <-  c("HOH/MFS/QW")
pos <- grep("HOH", x)
pos
pos
?grep
x <-  c("HOH/MFS/QW")
pos <- grep("MFS", x)
pos
x <-  c("HOH/MFS/QW")
pos <- grep("MFF", x)
pos
x <-  c("HOH/MFS/QW")
pos <- grep("MFF", x)
pos == 0
x <-  c("HOH/MFS/QW")
pos <- grep("MFF", x)
pos == 0
x <-  c("HOH/MFS/QW")
pos <- regexpr("MFF", x)
pos == 0
x <-  c("HOH/MFS/QW")
pos <- regexpr("MFF", x)
pos
x <-  c("HOH/MFS/QW")
pos <- regexpr("MFF", x)
pos
pos
x <-  c("HOH/MFS/QW")
pos <- grep("MFF", x)
pos
x <-  c("HOH/MFS/QW")
pos <- grep("MFF", x)
pos>0
x <-  c("HOH/MFS/QW")
pos <- grepl("MFF", x)
pos
x <-  c("HOH/MFS/QW")
pos <- grepl("QW", x)
pos
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?read.csv
?read.xls
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
