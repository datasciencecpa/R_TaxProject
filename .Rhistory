library("UsingR", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
head(precip)
head(sort(precip, decreasing = TRUE))
current_time <- now()
require(lubridate)
library(UsingR)
require(lubridate)
install.packages("lubridate")
library("lubridate", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
current_time <-now()
current_time
?lubridate
month(current_time, label = TRUE)
?ymd
x <- babies$dwt
x
length(x)
x[x==999] <- NA
range(x, na.rm = TRUE)
age <- kid.weights$age
age
ht <- kid.weights$height
ht[age>=48 & age<=60]
ht
gas <- c(65311 65624 659!8 66219 66499 66821 67145 67447)
gas <- c(65311 65624 65908 66219 66499 66821 67145 67447)
gas <- c(65311, 65624, 65908, 66219, 66499, 66821, 67145, 67447)
diff(gas)
mean(gas)
mean (diff(gas))
x <- c(2,5,4,10,8)
x_square = x*x
x_square
?gsub
first_and_last <- function(name) { name <- gsub(" ", "", name) letters <- strsplit(name, split = "")[[1]] c(first = min(letters), last = max(letters)) }
first_and_last("New York")
first_and_last <- function(name) { name <- gsub(" ", "", name) letters <- strsplit(name, split = "")[[1]] c(first = min(letters), last = max(letters)) }
first_and_last <- function(name) {
name <- gsub(" ", "", name)
letters <- strsplit(name, split = "")[[1]]
c(first = min(letters), last = max(letters))
}
first_and_last("New York")
help(gsub)
gsub(" ","", "New York")
a <- gsub(" ","", "New York")
letters <- strsplit(a, split = "")[[1]]
letters
?cat
cat("The average temperature is", mean(x), "\n")
cat("The average temperature is", mean(c(10,5,20,1)), "\n")
?vapply
?vapply(list, function, FUN.VALUE = type, ...)
rep(seq(8, 2, by = -2), times = 2))
rep(seq(8, 2, by = -2), times = 2)
?strptime
install.packages(c("nycflights13", "gapminder", "Lahman"))
install.packages(c("backports", "BH", "class", "codetools", "htmlTable", "pillar", "rlang", "tibble"))
install.packages("rmarkdown")
install.packages("tinytex")
unlink('Desktop/rmarkdown-book/03-documents_cache', recursive = TRUE)
shiny::runApp('Desktop/R_Shiny/Example_01')
setwd("~/Desktop/R_TaxProject")
filingStatusUI <- function (id){
ns <- NS(id)
tabPanel("Filing Status & Dependency",
fluidRow(
column(5, h3("2018")),
column(5, h3("2017")),
),
hr(),
fluidRow(
column(5, h3("2018"),
radioButtons(ns ("filingStatus_2018"), label= "1. Please select your filing status below:",
choices = c("Single", "Married Filing Jointly", "Married Filing Separately", "Head of Household", "Qualified Widower"),
selected = "Single", inline = FALSE),
"Need help? Visit IRS Interactive Tax Assistant: ",
a(href = "https://www.irs.gov/help/ita/what-is-my-filing-status", "What is my filing status?")
),
column(5, h3("2017"),
radioButtons(ns("filingStatus_2017"), label= "1. Please select your filing status below:",
choices = c("Single", "Married Filing Jointly", "Married Filing Separately", "Head of Household", "Qualified Widower"),
selected = "Single", inline = FALSE),
"Need help? Visit IRS Interactive Tax Assistant: ",
a(href = "https://www.irs.gov/help/ita/what-is-my-filing-status", "What is my filing status?")
)
), # End first row of filing status
hr(),
fluidRow(
column(5,
radioButtons(ns ("isDependent_2018"), label = "Can someone claim you as a dependent on their tax return?",
choices = c("Yes", "No"), selected = "No")
),
column(5,
radioButtons(ns ("isDependent_2017"), label = "Can someone claim you as a dependent on their tax return?",
choices = c("Yes", "No"), selected = "No")
)
), # End second row of checking dependency on other people return
hr(),
h3("Number of Dependents"),
fluidRow(
column(5,
numericInput(ns("numQualifiedChild_2018"), label = "Enter number of your qualifying child",
min= 0, max=10, value = 0),
numericInput(ns("numQualifiedRelative_2018"), label = "Enter number of your qualifying relative",
min= 0, max=10, value = 0),
"Need help? Visit this Turbo Tax article to learn more: ",
a(href = "https://turbotax.intuit.com/tax-tips/family/rules-for-claiming-a-dependent-on-your-tax-return/L8LODbx94",
"Rules for claiming a dependent on your tax return")
),
column(5,
numericInput(ns("numQualifiedChild_2017"), label = "Enter number of your qualifying child",
min= 0, max=5, value = 0),
numericInput(ns("numQualifiedRelative_2017"), label = "Enter number of your qualifying relative",
min= 0, max=5, value = 0),
"Need help? Visit this Turbo Tax article to learn more: ",
a(href = "https://turbotax.intuit.com/tax-tips/family/rules-for-claiming-a-dependent-on-your-tax-return/L8LODbx94",
"Rules for claiming a dependent on your tax return")
)
),# Ending third row, entering number of dependents
hr(),
h3("Ages:"),
fluidRow(
column(5,
numericInput(ns("yourAge_2018"), label = "Enter your age:",
min= 0, max=200, value = 30),
checkboxInput(ns("youBlind_2018"), label = "Check if you are blind", value = FALSE),
numericInput(ns("spouseAge_2018"), label = "Enter your spouse age:",
min= 0, max=200, value = 0),
checkboxInput(ns("spouseBlind_2018"), label = "Check if you are blind", value = FALSE),
numericInput(ns("child1Age_2018"), label = "Enter your child 1 age:",
min = 0, max=200, value = 0),
numericInput(ns("child2Age_2018"), label = "Enter your child 2 age:",
min = 0, max=200, value = 0),
numericInput(ns("child3Age_2018"), label = "Enter your child 3 age:",
min = 0, max=200, value = 0),
numericInput(ns("child4Age_2018"), label = "Enter your child 4 age:",
min = 0, max=200, value = 0),
numericInput(ns( "child5Age_2018"), label = "Enter your child 5 age:",
min = 0, max=200, value = 0),
numericInput(ns( "qualifiedRel1_2018"), label = "Enter your qualifying relative 1 age:",
min = 0, max=200, value = 0),
numericInput(ns( "qualifiedRel2_2018"), label = "Enter your qualifying relative 2 age:",
min = 0, max=200, value = 0),
numericInput(ns( "qualifiedRel3_2018"), label = "Enter your qualifying relative 3 age:",
min = 0, max=200, value = 0),
numericInput(ns( "qualifiedRel4_2018"), label = "Enter your qualifying relative 4 age:",
min = 0, max=200, value = 0),
numericInput(ns( "qualifiedRel5_2018"), label = "Enter your qualifying relative 5 age:",
min = 0, max=200, value = 0)
),
column(5,
numericInput(ns( "yourAge_2017"), label = "Enter your age:",
min= 0, max=200, value = 30),
checkboxInput(ns("youBlind_2017"), label = "Check if you are blind", value = FALSE),
numericInput(ns( "spouseAge_2017"), label = "Enter your spouse age:",
min= 0, max=200, value = 0),
checkboxInput(ns("spouseBlind_2017"), label = "Check if you are blind", value = FALSE),
numericInput(ns( "child1Age_2017"), label = "Enter your child 1 age:",
min = 0, max=200, value = 0),
numericInput(ns( "child2Age_2017"), label = "Enter your child 2 age:",
min = 0, max=200, value = 0),
numericInput(ns( "child3Age_2017"), label = "Enter your child 3 age:",
min = 0, max=200, value = 0),
numericInput(ns( "child4Age_2017"), label = "Enter your child 4 age:",
min = 0, max=200, value = 0),
numericInput(ns( "child5Age_2017"), label = "Enter your child 5 age:",
min = 0, max=200, value = 0),
numericInput(ns( "qualifiedRel1_2017"), label = "Enter your qualifying relative 1 age:",
min = 0, max=200, value = 0),
numericInput(ns( "qualifiedRel2_2017"), label = "Enter your qualifying relative 2 age:",
min = 0, max=200, value = 0),
numericInput(ns( "qualifiedRel3_2017"), label = "Enter your qualifying relative 3 age:",
min = 0, max=200, value = 0),
numericInput(ns( "qualifiedRel4_2017"), label = "Enter your qualifying relative 4 age:",
min = 0, max=200, value = 0),
numericInput(ns( "qualifiedRel5_2017"), label = "Enter your qualifying relative 5 age:",
min = 0, max=200, value = 0)
)
)
)
}
filingStatus <- function (input, output, session){
observe({
if (input$filingStatus_2018 == "Single"){
hide(id = "numQualifiedChild_2018")
hide(id = "numQualifiedRelative_2018")
} else {
show(id = "numQualifiedChild_2018")
show(id = "numQualifiedRelative_2018")
}
if (input$filingStatus_2017 == "Single"){
hide(id = "numQualifiedChild_2017")
hide(id = "numQualifiedRelative_2017")
} else {
show(id = "numQualifiedChild_2017")
show(id = "numQualifiedRelative_2017")
}
if (input$filingStatus_2018 != "Married Filing Jointly"){
hide(id = "spouseAge_2018")
hide(id = "spouseBlind_2018")
}else {
show(id = "spouseAge_2018")
show(id = "spouseBlind_2018")
}
if (input$filingStatus_2017 != "Married Filing Jointly"){
hide(id = "spouseAge_2017")
hide(id = "spouseBlind_2017")
}else {
show(id = "spouseAge_2017")
show(id = "spouseBlind_2017")
}
}) # Finish cosmetic issues.
filingStatusDF <- reactive ({
rowNames <- c("filingStatus", "dependent", "numQualifyingChild", "numQualifyingRelative",
"yourAge", "spouseAge", "youBlind", "spouseBlind", "child1Age", "child2Age",
"child3Age", "child4Age", "child5Age", "relative1Age", "relative2Age",
"relative3Age", "relative4Age", "relative5Age")
status_2018 <- c( input$filingStatus_2018,
input$isDependent_2018,
input$numQualifiedChild_2018,
input$numQualifiedRelative_2018,
input$yourAge_2018,
input$spouseAge_2018,
input$youBlind_2018,
input$spouseBlind_2018,
input$child1Age_2018,
input$child2Age_2018,
input$child3Age_2018,
input$child4Age_2018,
input$child5Age_2018,
input$qualifiedRel1_2018,
input$qualifiedRel2_2018,
input$qualifiedRel3_2018,
input$qualifiedRel4_2018,
input$qualifiedRel5_2018
)
status_2017 <- c( input$filingStatus_2017,
input$isDependent_2017,
input$numQualifiedChild_2017,
input$numQualifiedRelative_2017,
input$yourAge_2017,
input$spouseAge_2017,
input$youBlind_2017,
input$spouseBlind_2017,
input$child1Age_2017,
input$child2Age_2017,
input$child3Age_2017,
input$child4Age_2017,
input$child5Age_2017,
input$qualifiedRel1_2017,
input$qualifiedRel2_2017,
input$qualifiedRel3_2017,
input$qualifiedRel4_2017,
input$qualifiedRel5_2017)
return (data.frame(status_2018, status_2017, row.names = rowNames))
})
}
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
filingStatusUI <- function (id){
ns <- NS(id)
tabPanel("Filing Status & Dependency",
fluidRow(
column(5, h3("2018"),
radioButtons(ns ("filingStatus_2018"), label= "1. Please select your filing status below:",
choices = c("Single", "Married Filing Jointly", "Married Filing Separately", "Head of Household", "Qualified Widower"),
selected = "Single", inline = FALSE),
"Need help? Visit IRS Interactive Tax Assistant: ",
a(href = "https://www.irs.gov/help/ita/what-is-my-filing-status", "What is my filing status?")
),
column(5, h3("2017"),
radioButtons(ns("filingStatus_2017"), label= "1. Please select your filing status below:",
choices = c("Single", "Married Filing Jointly", "Married Filing Separately", "Head of Household", "Qualified Widower"),
selected = "Single", inline = FALSE),
"Need help? Visit IRS Interactive Tax Assistant: ",
a(href = "https://www.irs.gov/help/ita/what-is-my-filing-status", "What is my filing status?")
)
), # End first row of filing status
hr(),
fluidRow(
column(5,
radioButtons(ns ("isDependent_2018"), label = "Can someone claim you as a dependent on their tax return?",
choices = c("Yes", "No"), selected = "No")
),
column(5,
radioButtons(ns ("isDependent_2017"), label = "Can someone claim you as a dependent on their tax return?",
choices = c("Yes", "No"), selected = "No")
)
), # End second row of checking dependency on other people return
hr(),
h3("Number of Dependents"),
fluidRow(
column(5,
numericInput(ns("numQualifiedChild_2018"), label = "Enter number of your qualifying child",
min= 0, max=10, value = 0),
numericInput(ns("numQualifiedRelative_2018"), label = "Enter number of your qualifying relative",
min= 0, max=10, value = 0),
"Need help? Visit this Turbo Tax article to learn more: ",
a(href = "https://turbotax.intuit.com/tax-tips/family/rules-for-claiming-a-dependent-on-your-tax-return/L8LODbx94",
"Rules for claiming a dependent on your tax return")
),
column(5,
numericInput(ns("numQualifiedChild_2017"), label = "Enter number of your qualifying child",
min= 0, max=5, value = 0),
numericInput(ns("numQualifiedRelative_2017"), label = "Enter number of your qualifying relative",
min= 0, max=5, value = 0),
"Need help? Visit this Turbo Tax article to learn more: ",
a(href = "https://turbotax.intuit.com/tax-tips/family/rules-for-claiming-a-dependent-on-your-tax-return/L8LODbx94",
"Rules for claiming a dependent on your tax return")
)
),# Ending third row, entering number of dependents
hr(),
h3("Ages:"),
fluidRow(
column(5,
numericInput(ns("yourAge_2018"), label = "Enter your age:",
min= 0, max=200, value = 30),
checkboxInput(ns("youBlind_2018"), label = "Check if you are blind", value = FALSE),
numericInput(ns("spouseAge_2018"), label = "Enter your spouse age:",
min= 0, max=200, value = 0),
checkboxInput(ns("spouseBlind_2018"), label = "Check if you are blind", value = FALSE),
numericInput(ns("child1Age_2018"), label = "Enter your child 1 age:",
min = 0, max=200, value = 0),
numericInput(ns("child2Age_2018"), label = "Enter your child 2 age:",
min = 0, max=200, value = 0),
numericInput(ns("child3Age_2018"), label = "Enter your child 3 age:",
min = 0, max=200, value = 0),
numericInput(ns("child4Age_2018"), label = "Enter your child 4 age:",
min = 0, max=200, value = 0),
numericInput(ns( "child5Age_2018"), label = "Enter your child 5 age:",
min = 0, max=200, value = 0),
numericInput(ns( "qualifiedRel1_2018"), label = "Enter your qualifying relative 1 age:",
min = 0, max=200, value = 0),
numericInput(ns( "qualifiedRel2_2018"), label = "Enter your qualifying relative 2 age:",
min = 0, max=200, value = 0),
numericInput(ns( "qualifiedRel3_2018"), label = "Enter your qualifying relative 3 age:",
min = 0, max=200, value = 0),
numericInput(ns( "qualifiedRel4_2018"), label = "Enter your qualifying relative 4 age:",
min = 0, max=200, value = 0),
numericInput(ns( "qualifiedRel5_2018"), label = "Enter your qualifying relative 5 age:",
min = 0, max=200, value = 0)
),
column(5,
numericInput(ns( "yourAge_2017"), label = "Enter your age:",
min= 0, max=200, value = 30),
checkboxInput(ns("youBlind_2017"), label = "Check if you are blind", value = FALSE),
numericInput(ns( "spouseAge_2017"), label = "Enter your spouse age:",
min= 0, max=200, value = 0),
checkboxInput(ns("spouseBlind_2017"), label = "Check if you are blind", value = FALSE),
numericInput(ns( "child1Age_2017"), label = "Enter your child 1 age:",
min = 0, max=200, value = 0),
numericInput(ns( "child2Age_2017"), label = "Enter your child 2 age:",
min = 0, max=200, value = 0),
numericInput(ns( "child3Age_2017"), label = "Enter your child 3 age:",
min = 0, max=200, value = 0),
numericInput(ns( "child4Age_2017"), label = "Enter your child 4 age:",
min = 0, max=200, value = 0),
numericInput(ns( "child5Age_2017"), label = "Enter your child 5 age:",
min = 0, max=200, value = 0),
numericInput(ns( "qualifiedRel1_2017"), label = "Enter your qualifying relative 1 age:",
min = 0, max=200, value = 0),
numericInput(ns( "qualifiedRel2_2017"), label = "Enter your qualifying relative 2 age:",
min = 0, max=200, value = 0),
numericInput(ns( "qualifiedRel3_2017"), label = "Enter your qualifying relative 3 age:",
min = 0, max=200, value = 0),
numericInput(ns( "qualifiedRel4_2017"), label = "Enter your qualifying relative 4 age:",
min = 0, max=200, value = 0),
numericInput(ns( "qualifiedRel5_2017"), label = "Enter your qualifying relative 5 age:",
min = 0, max=200, value = 0)
)
)
)
}
filingStatus <- function (input, output, session){
observe({
if (input$filingStatus_2018 == "Single"){
hide(id = "numQualifiedChild_2018")
hide(id = "numQualifiedRelative_2018")
} else {
show(id = "numQualifiedChild_2018")
show(id = "numQualifiedRelative_2018")
}
if (input$filingStatus_2017 == "Single"){
hide(id = "numQualifiedChild_2017")
hide(id = "numQualifiedRelative_2017")
} else {
show(id = "numQualifiedChild_2017")
show(id = "numQualifiedRelative_2017")
}
if (input$filingStatus_2018 != "Married Filing Jointly"){
hide(id = "spouseAge_2018")
hide(id = "spouseBlind_2018")
}else {
show(id = "spouseAge_2018")
show(id = "spouseBlind_2018")
}
if (input$filingStatus_2017 != "Married Filing Jointly"){
hide(id = "spouseAge_2017")
hide(id = "spouseBlind_2017")
}else {
show(id = "spouseAge_2017")
show(id = "spouseBlind_2017")
}
}) # Finish cosmetic issues.
filingStatusDF <- reactive ({
rowNames <- c("filingStatus", "dependent", "numQualifyingChild", "numQualifyingRelative",
"yourAge", "spouseAge", "youBlind", "spouseBlind", "child1Age", "child2Age",
"child3Age", "child4Age", "child5Age", "relative1Age", "relative2Age",
"relative3Age", "relative4Age", "relative5Age")
status_2018 <- c( input$filingStatus_2018,
input$isDependent_2018,
input$numQualifiedChild_2018,
input$numQualifiedRelative_2018,
input$yourAge_2018,
input$spouseAge_2018,
input$youBlind_2018,
input$spouseBlind_2018,
input$child1Age_2018,
input$child2Age_2018,
input$child3Age_2018,
input$child4Age_2018,
input$child5Age_2018,
input$qualifiedRel1_2018,
input$qualifiedRel2_2018,
input$qualifiedRel3_2018,
input$qualifiedRel4_2018,
input$qualifiedRel5_2018
)
status_2017 <- c( input$filingStatus_2017,
input$isDependent_2017,
input$numQualifiedChild_2017,
input$numQualifiedRelative_2017,
input$yourAge_2017,
input$spouseAge_2017,
input$youBlind_2017,
input$spouseBlind_2017,
input$child1Age_2017,
input$child2Age_2017,
input$child3Age_2017,
input$child4Age_2017,
input$child5Age_2017,
input$qualifiedRel1_2017,
input$qualifiedRel2_2017,
input$qualifiedRel3_2017,
input$qualifiedRel4_2017,
input$qualifiedRel5_2017)
return (data.frame(status_2018, status_2017, row.names = rowNames))
})
}
runApp()
incomeUI <- function (id){
ns <- NS(id)
tabPanel("Income",
fluidRow(
column(5, h3("2018")),
column(5, h3("2017"))
),
hr()
)
}
runApp()
deductionsUI <- function (id){
ns <- NS(id)
tabPanel("Deductions",
fluidRow(
column(5, h3("2018")),
column(5, h3("2017"))
),
hr()
)
}
runApp()
runApp()
creditsUI <- function (id){
ns <- NS(id)
tabPanel("Credits",
fluidRow(
column(5, h3("2018")),
column(5, h3("2017"))
),
hr()
)
}
resultsUI <- function (id){
ns <- NS(id)
tabPanel("Results",
fluidRow(
column(5, h3("2018")),
column(5, h3("2017"))
),
hr()
)
}
runApp()
